local disassembly = {}

local ReadScript = game:HttpGet("https://raw.githubusercontent.com/x-wz5/reg/refs/heads/main/wefwwffwef.lua")
local Read = loadstring(ReadScript)()

local opcodeScript = game:HttpGet("https://raw.githubusercontent.com/x-wz5/reg/refs/heads/main/idk")
local opcode = loadstring(opcodeScript)()

function disassembly.new(bytecode)
    local Reader = Read.new(bytecode)
    local opcode = opcode.new()
    local opcodeMap = opcode.map
    local self = {}
    
    function self:disassembly()
        local result = ""
        
        -- Fix: Ensure we iterate until the cursor reaches the end of the bytecode
        while Reader.cursor < Reader:len() do
            local byte = Reader:nextByte()
            local success,opcodeMapR = pcall(function() return opcodeMap[byte]end)
            if success then
                local byteArgs = opcode:getArg(byte)
                local arg = Reader:nextArg(byteArgs)
                
                -- Fix: Use correct reference to `opcodeMap`
                result = result .. opcodeMapR .. "  " .. arg .. "\n"
            else
                result = result .. "\n"
            end
        end
        return result
    end

    return self
end

return disassembly