local disassembly = {}

local ReadScript = game:HttpGet("https://raw.githubusercontent.com/x-wz5/reg/refs/heads/main/wefwwffwef.lua")
local Read = loadstring(ReadScript)()

local opcodeScript = game:HttpGet("https://raw.githubusercontent.com/x-wz5/reg/refs/heads/main/idk")
local opcode = loadstring(opcodeScript)()

function disassembly.new(bytecode)
    local Reader = Read.new(bytecode)
    local opcode = opcode.new()
    local opcodeMap = opcode.map
    local self = {}
    
    function self:disassembly()
        local result = ""
        
        -- Fix: Ensure we iterate until the cursor reaches the end of the bytecode
        while Reader.cursor < Reader:len() do
            local byte = Reader:nextByte()
            
            -- Check if the byte exists in opcodeMap
            if opcodeMap[byte] then
                -- Get the argument count or pattern associated with the byte
                local byteArgs = opcode:getArg(byte)
                
                -- Ensure byteArgs is valid (could be 0 if no args are required)
                if byteArgs then
                    local arg = Reader:nextArg(byteArgs)
                    result = result .. opcodeMap[byte] .. "  " .. arg .. "\n"
                else
                    result = result .. opcodeMap[byte] .. "  <No Args>\n"
                end
            else
                result = result .. "Unknown byte: " .. tostring(byte) .. "\n"
            end
        end
        return result
    end

    return self
end

return disassembly