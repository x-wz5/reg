local cFlow = {}

local ReadScript = game:HttpGet("https://raw.githubusercontent.com/x-wz5/reg/refs/heads/main/wefwwffwef.lua")
local Read = loadstring(ReadScript)()

local opc = {
    [1] = "LOP_NOP",
    [2] = "LOP_BREAK",
    [3] = "LOP_LOADNIL",
    [4] = "LOP_LOADB",
    [5] = "LOP_LOADN",
    [6] = "LOP_LOADK",
    [7] = "LOP_MOVE",
    [8] = "LOP_GETGLOBAL",
    [9] = "LOP_SETGLOBAL",
    [10] = "LOP_GETUPVAL",
    [11] = "LOP_SETUPVAL",
    [12] = "LOP_CLOSEUPVALS",
    [13] = "LOP_GETIMPORT",
    [14] = "LOP_GETTABLE",
    [15] = "LOP_SETTABLE",
    [16] = "LOP_GETTABLEKS",
    [17] = "LOP_SETTABLEKS",
    [18] = "LOP_GETTABLEN",
    [19] = "LOP_SETTABLEN",
    [20] = "LOP_NEWCLOSURE",
    [21] = "LOP_NAMECALL",
    [22] = "LOP_CALL",
    [23] = "LOP_RETURN",
    [24] = "LOP_JUMP",
    [25] = "LOP_JUMPBACK",
    [26] = "LOP_JUMPIF",
    [27] = "LOP_JUMPIFNOT",
    [28] = "LOP_JUMPIFEQ",
    [29] = "LOP_JUMPIFLE",
    [30] = "LOP_JUMPIFLT",
    [31] = "LOP_JUMPIFNOTEQ",
    [32] = "LOP_JUMPIFNOTLE",
    [33] = "LOP_JUMPIFNOTLT",
    [34] = "LOP_ADD",
    [35] = "LOP_SUB",
    [36] = "LOP_MUL",
    [37] = "LOP_DIV",
    [38] = "LOP_MOD",
    [39] = "LOP_POW",
    [40] = "LOP_ADDK",
    [41] = "LOP_SUBK",
    [42] = "LOP_MULK",
    [43] = "LOP_DIVK",
    [44] = "LOP_MODK",
    [45] = "LOP_POWK",
    [46] = "LOP_AND",
    [47] = "LOP_OR",
    [48] = "LOP_ANDK",
    [49] = "LOP_ORK",
    [50] = "LOP_CONCAT",
    [51] = "LOP_NOT",
    [52] = "LOP_MINUS",
    [53] = "LOP_LENGTH",
    [54] = "LOP_NEWTABLE",
    [55] = "LOP_DUPTABLE",
    [56] = "LOP_SETLIST",
    [57] = "LOP_FORNPREP",
    [58] = "LOP_FORNLOOP",
    [59] = "LOP_FORGLOOP",
    [60] = "LOP_FORGPREP_INEXT",
    [61] = "LOP_FASTCALL3",
    [62] = "LOP_FORGPREP_NEXT",
    [63] = "LOP_NATIVECALL",
    [64] = "LOP_GETVARARGS",
    [65] = "LOP_DUPCLOSURE",
    [66] = "LOP_PREPVARARGS",
    [67] = "LOP_LOADKX",
    [68] = "LOP_JUMPX",
    [69] = "LOP_FASTCALL",
    [70] = "LOP_COVERAGE",
    [71] = "LOP_CAPTURE",
    [72] = "LOP_SUBRK",
    [73] = "LOP_DIVRK",
    [74] = "LOP_FASTCALL1",
    [75] = "LOP_FASTCALL2",
    [76] = "LOP_FASTCALL2K",
    [77] = "LOP_FORGPREP",
    [78] = "LOP_JUMPXEQKNIL",
    [79] = "LOP_JUMPXEQKB",
    [80] = "LOP_JUMPXEQKN",
    [81] = "LOP_JUMPXEQKS",
    [82] = "LOP_IDIV",
    [83] = "LOP_IDIVK",
    [84] = "LOP__COUNT"
  }

function cFlow.new(bytecode)
    local Reader = Read.new(bytecode)
    local self = {}
    
    function self:getNextIf(range)
        local result = ""
        for i = 0, range do
            local byte = Reader:nextByte()
            if opc[byte] then
                result = result .. opc[byte] .. "\n"
                
            else
                result = result.. "\n" -- Return empty if no valid opcode found
            end
            
        end
        return result
    end

    return self
end

return cFlow